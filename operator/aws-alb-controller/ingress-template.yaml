apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "${ name }-alb"
  namespace: kong-gateways
  annotations:
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=false
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/backend-protocol: "HTTP"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:eu-west-1:a:certificate/b"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTPS"
    alb.ingress.kubernetes.io/success-codes: '401,404'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "instance"
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"
    alb.ingress.kubernetes.io/load-balancer-name: "sample-alb-ctl"
    alb.ingress.kubernetes.io/group.name: "sample-alb-ctl"
    alb.ingress.kubernetes.io/subnets: "subnet-a,subnet-b,subnet-c"
    alb.ingress.kubernetes.io/inbound-cidrs: "0.0.0.0/0"
spec:
  ingressClassName: alb
  rules:
  - host: "kong-${ name }.aws.jackgpt.co.uk"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "${ name }-proxy"
            port:
              number: 80
